{"version":3,"sources":["components/NoteCard/NoteCard.tsx","services/service.ts","services/note.service.ts","views/home/components/HomeNotes.tsx","views/home/Home.tsx","views/about/About.tsx","components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NoteCard","children","className","Service","key","data","localStorage","getItem","JSON","parse","body","newData","setItem","stringify","index","splice","urlBase","create","note","a","post","newNote","list","get","notes","remove","delete","HomeNotes","useState","setNotes","id","name","description","status","tags","noteForm","setNoteForm","changeInput","fieldName","value","newNoteForm","listNotes","createNote","deleteNote","useEffect","xs","sm","md","lg","xl","xxl","length","map","e","i","onClick","size","shape","icon","DeleteOutlined","onChange","currentTarget","Home","About","props","Navbar","to","HomeOutlined","TagsOutlined","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yaAOaA,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,K,oCCNxBE,EAAb,+HA0BE,WAA2BC,GAA3B,4EACQC,EAAOC,aAAaC,QAAQH,IADpC,yCAEmBI,KAAKC,MAAMJ,IAF9B,gCAGc,IAHd,2CA1BF,gHAgCE,WAAiCD,EAAaM,GAA9C,gFACQL,EAAOC,aAAaC,QAAQH,IADpC,uBAGQO,EAAUH,KAAKC,MAAMJ,GACzBM,EAAO,CAAID,GAAJ,mBAAaC,IACpBL,aAAaM,QAAQR,EAAKI,KAAKK,UAAUF,IAL7C,kBAMWA,GANX,cAQQA,EAAUH,KAAKK,UAAU,CAACH,IAC9BJ,aAAaM,QAAQR,EAAKO,GAT9B,kBAUWD,GAVX,4CAhCF,oHAmDE,WAA8BN,EAAaU,GAA3C,8EACQT,EAAOC,aAAaC,QAAQH,IADpC,uBAGQO,EAAUH,KAAKC,MAAMJ,IACjBU,OAAOD,EAAO,GACtBR,aAAaM,QAAQR,EAAKI,KAAKK,UAAUF,IAL7C,kBAMWA,GANX,2CAnDF,gEAAaR,EACGa,QAAU,gCCCnB,I,WAgBE,CAAEC,OAfG,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACgBhB,EAAQiB,KAAmB,QAASF,GADpD,cACPG,EADO,yBAENA,GAFM,2CAAH,sDAeKC,KAVP,uCAAG,4BAAAH,EAAA,sEACkBhB,EAAQoB,IAAW,SADrC,cACLC,EADK,yBAEJA,GAFI,2CAAH,qDAUaC,OALX,uCAAG,WAAOX,GAAP,eAAAK,EAAA,sEACOhB,EAAQuB,OAAO,QAASZ,GAD/B,cACPU,EADO,yBAENA,GAFM,2CAAH,uDCPNP,E,EAAAA,OAAQK,E,EAAAA,KAAMG,E,EAAAA,OAITE,EAAY,WAAO,IAAD,EACHC,mBAAkB,IADf,mBACtBJ,EADsB,KACfK,EADe,OAEGD,mBAAgB,CAC9CE,GAAI,EACJC,KAAM,GACNC,YAAa,GACbC,QAAQ,EACRC,KAAM,KAPqB,mBAEtBC,EAFsB,KAEZC,EAFY,KAUvBC,EAAc,SAAeC,EAA0BC,GAC3D,IAAMC,EAAkB,eAAQL,GAChCK,EAAYF,GAAaC,EACzBH,EAAYI,IAGRC,EAAS,uCAAG,4BAAAtB,EAAA,sEACIG,IADJ,OACVE,EADU,OAEhBK,EAASL,GAFO,2CAAH,qDAKTkB,EAAU,uCAAG,sBAAAvB,EAAA,sEACEF,EAAOkB,GADT,cAEjBM,IAFiB,2CAAH,qDAKVE,EAAU,uCAAG,WAAO7B,GAAP,SAAAK,EAAA,sEACEM,EAAOX,GADT,cAEjB2B,IAFiB,2CAAH,sDAShB,OAJAG,qBAAU,WACRH,MACC,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CAAKI,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,IAAK,GAAIhD,UAAU,OAAhE,SACGsB,EAAM2B,QACL3B,EAAM4B,KAAI,SAACC,EAAGC,GAAJ,OACR,cAAC,EAAD,UACE,sBAAKpD,UAAU,OAAf,UACE,8BAAMmD,EAAEtB,OACR,qBAAK7B,UAAU,gBAAf,SACE,cAAC,IAAD,CACEqD,QAAS,kBAAMZ,EAAWW,IAC1BE,KAAM,QACNC,MAAM,SACNC,KAAM,cAACC,EAAA,EAAD,YARd,eAAuBL,SAe7B,eAAC,IAAD,CACET,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,IAAK,EACLhD,UAAU,iBAPZ,UASE,gCACE,cAAC,IAAD,CACEA,UAAU,QACV0D,SAAU,SAACP,GAAD,OAAOhB,EAAoB,OAAQgB,EAAEQ,cAActB,UAE/D,cAAC,IAAD,CACErC,UAAU,QACV0D,SAAU,SAACP,GAAD,OACRhB,EAAoB,cAAegB,EAAEQ,cAActB,aAIzD,cAAC,IAAD,CAAQgB,QAASb,EAAjB,0BCvEOoB,EAbE,WACf,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKjB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,SACE,wCAEF,cAAC,IAAD,CAAKJ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzC,SACE,cAAC,EAAD,UCCOc,EARD,SAACC,GACb,OACE,8BACE,0C,kBCFOC,G,OAAS,WACpB,IAAMT,EAAO,QACb,OACE,qBAAKtD,UAAU,SAAf,SACE,qBAAIA,UAAU,WAAd,UACE,6BACE,cAAC,IAAD,CAAMgE,GAAG,IAAT,SACE,cAAC,IAAD,CAAQV,KAAMA,EAAMC,MAAM,SAASC,KAAM,cAACS,EAAA,EAAD,UAG7C,6BACE,cAAC,IAAD,CAAMD,GAAG,SAAT,SACE,cAAC,IAAD,CAAQV,KAAMA,EAAMC,MAAM,SAASC,KAAM,cAACU,EAAA,EAAD,iB,qBCTtC,SAASC,IACtB,OACE,cAAC,IAAD,UACE,sBAAKnE,UAAU,kBAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,gBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoE,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,gBClBd,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6afe33af.chunk.js","sourcesContent":["import React from 'react'\r\nimport './NoteCard.scss'\r\n\r\ninterface INoteCard {\r\n  children: any\r\n}\r\n\r\nexport const NoteCard: React.FC<INoteCard> = ({ children }) => {\r\n  return <div className=\"note-card\">{children}</div>\r\n}\r\n","import axios, { AxiosResponse } from 'axios'\r\n\r\nexport class Service {\r\n  public static urlBase = 'http://localhost:3333/api/v1/'\r\n\r\n  // public static async get<T>(url: string) {\r\n  //   const response: AxiosResponse<T> = await axios.get(`${this.urlBase}${url}`)\r\n  //   return response.data\r\n  // }\r\n\r\n  // public static async post<T1, T2>(url: string, body: T1) {\r\n  //   const response: AxiosResponse<T2> = await axios.post(\r\n  //     `${this.urlBase}${url}`,\r\n  //     body\r\n  //   )\r\n  //   return response.data\r\n  // }\r\n\r\n  // public static async put<T, T2>(url: string, body: T2) {\r\n  //   const response: AxiosResponse<T> = await axios.put(this.urlBase + url, body)\r\n  //   return response.data\r\n  // }\r\n\r\n  // public static async delete<T>(url: string) {\r\n  //   const response: AxiosResponse<T> = await axios.delete(this.urlBase + url)\r\n  //   return response.data\r\n  // }\r\n\r\n  public static async get<T>(key: string) {\r\n    const data = localStorage.getItem(key)\r\n    if (data) return JSON.parse(data) as T[]\r\n    else return [] as T[]\r\n  }\r\n\r\n  public static async post<T1, T2>(key: string, body: T1) {\r\n    const data = localStorage.getItem(key)\r\n    if (data) {\r\n      let newData = JSON.parse(data)\r\n      newData = [body, ...newData]\r\n      localStorage.setItem(key, JSON.stringify(newData))\r\n      return newData as T2\r\n    } else {\r\n      let newData = JSON.stringify([body])\r\n      localStorage.setItem(key, newData)\r\n      return body as T1\r\n    }\r\n  }\r\n\r\n  // public static async put<T, T2>(url: string, body: T2) {\r\n  //   const response: AxiosResponse<T> = await axios.put(this.urlBase + url, body)\r\n  //   return response.data\r\n  // }\r\n\r\n  public static async delete<T>(key: string, index: number) {\r\n    const data = localStorage.getItem(key)\r\n    if (data) {\r\n      let newData = JSON.parse(data)\r\n      newData.splice(index, 1)\r\n      localStorage.setItem(key, JSON.stringify(newData))\r\n      return newData as T\r\n    }\r\n  }\r\n}\r\n","import { INote } from '../interfaces/note.interface'\r\nimport { Service } from './service'\r\n\r\n/** @description Servicio para obtener la informaciÃ³n de las notas */\r\nexport const NoteService = () => {\r\n  const create = async (note: INote) => {\r\n    const newNote: INote = await Service.post<INote, INote>('notes', note)\r\n    return newNote\r\n  }\r\n\r\n  const list = async () => {\r\n    const notes: INote[] = await Service.get<INote>('notes')\r\n    return notes\r\n  }\r\n\r\n  const remove = async (index: number) => {\r\n    const notes = await Service.delete('notes', index)\r\n    return notes\r\n  }\r\n\r\n  return { create, list, remove }\r\n}\r\n","import { Button, Col, Input, Row } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { NoteCard } from '../../../components/NoteCard/NoteCard'\r\nimport { INote } from '../../../interfaces/note.interface'\r\nimport './HomeNotes.scss'\r\nimport { NoteService } from '../../../services/note.service'\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\nconst { create, list, remove } = NoteService()\r\n\r\ntype FieldNameType = 'name' | 'description' | 'status' | 'tags'\r\n\r\nexport const HomeNotes = () => {\r\n  const [notes, setNotes] = useState<INote[]>([])\r\n  const [noteForm, setNoteForm] = useState<INote>({\r\n    id: 0,\r\n    name: '',\r\n    description: '',\r\n    status: true,\r\n    tags: [],\r\n  })\r\n\r\n  const changeInput = <T extends {}>(fieldName: FieldNameType, value: T) => {\r\n    const newNoteForm: INote = { ...noteForm }\r\n    newNoteForm[fieldName] = value\r\n    setNoteForm(newNoteForm)\r\n  }\r\n\r\n  const listNotes = async () => {\r\n    const notes = await list()\r\n    setNotes(notes)\r\n  }\r\n\r\n  const createNote = async () => {\r\n    const data = await create(noteForm)\r\n    listNotes()\r\n  }\r\n\r\n  const deleteNote = async (index: number) => {\r\n    const data = await remove(index)\r\n    listNotes()\r\n  }\r\n\r\n  useEffect(() => {\r\n    listNotes()\r\n  }, [])\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs={24} sm={24} md={12} lg={16} xl={16} xxl={16} className=\"px-2\">\r\n        {notes.length &&\r\n          notes.map((e, i) => (\r\n            <NoteCard key={`note-${i}`}>\r\n              <div className=\"note\">\r\n                <div>{e.name}</div>\r\n                <div className=\"note__actions\">\r\n                  <Button\r\n                    onClick={() => deleteNote(i)}\r\n                    size={'small'}\r\n                    shape=\"circle\"\r\n                    icon={<DeleteOutlined />}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </NoteCard>\r\n          ))}\r\n      </Col>\r\n      <Col\r\n        xs={24}\r\n        sm={24}\r\n        md={12}\r\n        lg={8}\r\n        xl={8}\r\n        xxl={8}\r\n        className=\"px-2 note-form\"\r\n      >\r\n        <div>\r\n          <Input\r\n            className=\"field\"\r\n            onChange={(e) => changeInput<string>('name', e.currentTarget.value)}\r\n          />\r\n          <TextArea\r\n            className=\"field\"\r\n            onChange={(e) =>\r\n              changeInput<string>('description', e.currentTarget.value)\r\n            }\r\n          />\r\n        </div>\r\n        <Button onClick={createNote}>Crear</Button>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { useEffect, useState, FC } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { HomeNotes } from './components/HomeNotes'\r\n\r\nconst Home: FC = () => {\r\n  return (\r\n    <Row>\r\n      <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n        <h1>Home</h1>\r\n      </Col>\r\n      <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n        <HomeNotes />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\ninterface Props {}\r\n\r\nconst About = (props: Props) => {\r\n  return (\r\n    <div>\r\n      <h1>About</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { Button, Tooltip } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, TagsOutlined } from '@ant-design/icons'\r\nimport './Navbar.scss'\r\n\r\nexport const Navbar = () => {\r\n  const size = 'large'\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"mainMenu\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <Button size={size} shape=\"circle\" icon={<HomeOutlined />} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">\r\n            <Button size={size} shape=\"circle\" icon={<TagsOutlined />} />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n","import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './views/home/Home'\nimport About from './views/about/About'\nimport { Navbar } from './components/Navbar/Navbar'\nimport 'antd/dist/antd.css' // or 'antd/dist/antd.less'\nimport './App.scss'\nimport './styles/global.scss'\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"navbarContainer\">\n        <Navbar />\n\n        <div className=\"viewContainer\">\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}