{"version":3,"sources":["components/NoteCard/NoteCard.tsx","services/service.ts","services/note.service.ts","views/home/hooks/useHomeNotes.tsx","views/home/components/HomeNoteForm.tsx","views/home/components/HomeNotesAction.tsx","views/home/components/HomeNotes.tsx","components/PageTitle/PageTitle.tsx","views/home/Home.tsx","views/about/About.tsx","components/Navbar/Navbar.tsx","store/note/reducer.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NoteCard","children","className","Service","key","data","localStorage","getItem","JSON","parse","body","newData","setItem","stringify","index","splice","urlBase","create","note","a","post","newNote","list","get","notes","remove","delete","NoteService","useHomeNotes","dispatch","useDispatch","useSelector","visibilityType","noteForm","listNotes","type","payload","deleteNote","Modal","warning","title","content","okText","cancelText","onOk","createNote","changeVisibility","changeCreateForm","isActive","viewNote","e","i","name","description","cancelButtonProps","style","display","getColumsConfig","xs","sm","md","lg","xl","xxl","changeInput","fieldName","value","newNoteForm","HomeNoteForm","onChange","currentTarget","onClick","HomeNotesAction","span","size","shape","icon","AppstoreOutlined","BarsOutlined","HomeNotes","showCreateForm","useEffect","placement","onClose","visible","length","map","EyeOutlined","DeleteOutlined","PageTitle","Home","About","Navbar","to","HomeOutlined","TagsOutlined","initialState","id","status","tags","reducers","combineReducers","state","action","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","store","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41fefd3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './NoteCard.scss'\r\n\r\ninterface INoteCard {\r\n  children: any\r\n}\r\n\r\nexport const NoteCard: React.FC<INoteCard> = ({ children }) => {\r\n  return <div className=\"note-card\">{children}</div>\r\n}\r\n","import axios, { AxiosResponse } from 'axios'\r\n\r\nexport class Service {\r\n  public static urlBase = 'http://localhost:3333/api/v1/'\r\n\r\n  // public static async get<T>(url: string) {\r\n  //   const response: AxiosResponse<T> = await axios.get(`${this.urlBase}${url}`)\r\n  //   return response.data\r\n  // }\r\n\r\n  // public static async post<T1, T2>(url: string, body: T1) {\r\n  //   const response: AxiosResponse<T2> = await axios.post(\r\n  //     `${this.urlBase}${url}`,\r\n  //     body\r\n  //   )\r\n  //   return response.data\r\n  // }\r\n\r\n  // public static async put<T, T2>(url: string, body: T2) {\r\n  //   const response: AxiosResponse<T> = await axios.put(this.urlBase + url, body)\r\n  //   return response.data\r\n  // }\r\n\r\n  // public static async delete<T>(url: string) {\r\n  //   const response: AxiosResponse<T> = await axios.delete(this.urlBase + url)\r\n  //   return response.data\r\n  // }\r\n\r\n  public static async get<T>(key: string) {\r\n    const data = localStorage.getItem(key)\r\n    if (data) return JSON.parse(data) as T[]\r\n    else return [] as T[]\r\n  }\r\n\r\n  public static async post<T1, T2>(key: string, body: T1) {\r\n    const data = localStorage.getItem(key)\r\n    if (data) {\r\n      let newData = JSON.parse(data)\r\n      newData = [body, ...newData]\r\n      localStorage.setItem(key, JSON.stringify(newData))\r\n      return newData as T2\r\n    } else {\r\n      let newData = JSON.stringify([body])\r\n      localStorage.setItem(key, newData)\r\n      return body as T1\r\n    }\r\n  }\r\n\r\n  // public static async put<T, T2>(url: string, body: T2) {\r\n  //   const response: AxiosResponse<T> = await axios.put(this.urlBase + url, body)\r\n  //   return response.data\r\n  // }\r\n\r\n  public static async delete<T>(key: string, index: number) {\r\n    const data = localStorage.getItem(key)\r\n    if (data) {\r\n      let newData = JSON.parse(data)\r\n      newData.splice(index, 1)\r\n      localStorage.setItem(key, JSON.stringify(newData))\r\n      return newData as T\r\n    }\r\n  }\r\n}\r\n","import { INote } from '../interfaces/note.interface'\r\nimport { Service } from './service'\r\n\r\n/** @description Servicio para obtener la informaciÃ³n de las notas */\r\nexport const NoteService = () => {\r\n  const create = async (note: INote) => {\r\n    const newNote: INote = await Service.post<INote, INote>('notes', note)\r\n    return newNote\r\n  }\r\n\r\n  const list = async () => {\r\n    const notes: INote[] = await Service.get<INote>('notes')\r\n    return notes\r\n  }\r\n\r\n  const remove = async (index: number) => {\r\n    const notes = await Service.delete('notes', index)\r\n    return notes\r\n  }\r\n\r\n  return { create, list, remove }\r\n}\r\n","import { Modal } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { INote } from '../../../interfaces/note.interface'\r\nimport { NoteService } from '../../../services/note.service'\r\nimport { IStore } from '../../../store'\r\ntype FieldNameType = 'name' | 'description' | 'status' | 'tags'\r\n\r\nconst { create, list, remove } = NoteService()\r\n\r\nexport const useHomeNotes = () => {\r\n  const dispatch = useDispatch()\r\n  const { visibilityType, noteForm } = useSelector(({ note }: IStore) => note)\r\n\r\n  const listNotes = async () => {\r\n    const notes = await list()\r\n    dispatch({ type: 'SET_NOTES', payload: notes })\r\n  }\r\n\r\n  const deleteNote = async (index: number) => {\r\n    Modal.warning({\r\n      title: 'Confirmar',\r\n      content: `Â¿Estas seguro de eliminar esta nota`,\r\n      okText: 'Eliminar',\r\n      cancelText: 'Cancelar',\r\n      onOk: async () => {\r\n        await remove(index)\r\n        listNotes()\r\n      },\r\n    })\r\n  }\r\n\r\n  const changeVisibility = () => {\r\n    const newValue = visibilityType === 'list' ? 'cards' : 'list'\r\n    dispatch({ type: 'SET_VISIBILITY_TYPE', payload: newValue })\r\n  }\r\n\r\n  const changeCreateForm = (isActive: boolean) => {\r\n    dispatch({ type: 'SET_SHOW_CREATE_FORM', payload: isActive })\r\n  }\r\n\r\n  const viewNote = (e: INote, i: number) => {\r\n    Modal.warning({\r\n      title: e.name,\r\n      content: e.description,\r\n      okText: '',\r\n      cancelButtonProps: { style: { display: 'none' } },\r\n      cancelText: 'Cerrar',\r\n      onOk: async () => {},\r\n    })\r\n  }\r\n\r\n  const getColumsConfig = () => {\r\n    return visibilityType === 'list'\r\n      ? { xs: 24, sm: 24, md: 24, lg: 24, xl: 24, xxl: 24 }\r\n      : { xs: 24, sm: 24, md: 12, lg: 8, xl: 6, xxl: 6 }\r\n  }\r\n\r\n  const createNote = async () => {\r\n    await create(noteForm)\r\n    listNotes()\r\n  }\r\n\r\n  const changeInput = <T extends {}>(fieldName: FieldNameType, value: T) => {\r\n    const newNoteForm: INote = { ...noteForm }\r\n    newNoteForm[fieldName] = value\r\n    dispatch({ type: 'SET_NOTE_FORM', payload: newNoteForm })\r\n  }\r\n\r\n  return {\r\n    listNotes,\r\n    deleteNote,\r\n    changeVisibility,\r\n    changeCreateForm,\r\n    viewNote,\r\n    getColumsConfig,\r\n    createNote,\r\n    changeInput,\r\n  }\r\n}\r\n","import { Button, Input } from 'antd'\r\nimport TextArea from 'antd/lib/input/TextArea'\r\nimport { useHomeNotes } from './../hooks/useHomeNotes'\r\n\r\nexport const HomeNoteForm = () => {\r\n  const { changeCreateForm, createNote, changeInput } = useHomeNotes()\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>TÃ­tulo</label>\r\n        <Input\r\n          className=\"field\"\r\n          onChange={(e) => changeInput<string>('name', e.currentTarget.value)}\r\n        />\r\n\r\n        <label>DescripciÃ³n</label>\r\n        <TextArea\r\n          className=\"field\"\r\n          onChange={(e) =>\r\n            changeInput<string>('description', e.currentTarget.value)\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"dflex justify-content-end py-2 gap-1\">\r\n        <Button onClick={() => changeCreateForm(false)}>Cerrar</Button>\r\n        <Button type=\"primary\" onClick={createNote}>\r\n          Crear\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Col } from 'antd'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { IStore } from '../../../store'\r\nimport { useHomeNotes } from './../hooks/useHomeNotes'\r\nimport { AppstoreOutlined, BarsOutlined } from '@ant-design/icons'\r\n\r\nexport const HomeNotesAction = () => {\r\n  const { visibilityType } = useSelector(({ note }: IStore) => note)\r\n  const { changeVisibility, changeCreateForm } = useHomeNotes()\r\n\r\n  return (\r\n    <Col span={24}>\r\n      <div className=\"note-admin px-2 py-2\">\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          shape=\"circle\"\r\n          onClick={() => changeVisibility()}\r\n          icon={\r\n            visibilityType === 'list' ? <AppstoreOutlined /> : <BarsOutlined />\r\n          }\r\n        />\r\n\r\n        <Button\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          onClick={() => changeCreateForm(true)}\r\n        >\r\n          Crear nueva nota\r\n        </Button>\r\n      </div>\r\n    </Col>\r\n  )\r\n}\r\n","import { Button, Col, Drawer, Empty, Row } from 'antd'\r\nimport { useEffect } from 'react'\r\nimport { NoteCard } from '../../../components/NoteCard/NoteCard'\r\nimport './HomeNotes.scss'\r\nimport { DeleteOutlined, EyeOutlined } from '@ant-design/icons'\r\nimport { useSelector } from 'react-redux'\r\nimport { IStore } from '../../../store'\r\nimport { HomeNoteForm } from './HomeNoteForm'\r\nimport { useHomeNotes } from '../hooks/useHomeNotes'\r\nimport { HomeNotesAction } from './HomeNotesAction'\r\n\r\nexport const HomeNotes = () => {\r\n  const { notes, showCreateForm } = useSelector(({ note }: IStore) => note)\r\n\r\n  const { listNotes, deleteNote, changeCreateForm, viewNote, getColumsConfig } =\r\n    useHomeNotes()\r\n\r\n  useEffect(() => {\r\n    listNotes()\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        title=\"Crear Nota\"\r\n        placement=\"right\"\r\n        onClose={() => changeCreateForm(false)}\r\n        visible={showCreateForm}\r\n      >\r\n        <HomeNoteForm />\r\n      </Drawer>\r\n      <Row>\r\n        <HomeNotesAction />\r\n\r\n        {notes.length ? (\r\n          <>\r\n            {notes.map((e, i) => (\r\n              <Col {...getColumsConfig()} key={`note-${i}`} className=\"px-2\">\r\n                <NoteCard>\r\n                  <div className=\"note\">\r\n                    <div>{e.name}</div>\r\n                    <div className=\"note__actions\">\r\n                      <Button\r\n                        onClick={() => viewNote(e, i)}\r\n                        size={'middle'}\r\n                        shape=\"circle\"\r\n                        icon={<EyeOutlined />}\r\n                      />\r\n                      <Button\r\n                        onClick={() => deleteNote(i)}\r\n                        size={'middle'}\r\n                        shape=\"circle\"\r\n                        icon={<DeleteOutlined />}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </NoteCard>\r\n              </Col>\r\n            ))}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Empty />\r\n          </>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\ninterface IPageTitle {\r\n  children: any\r\n}\r\n\r\nexport const PageTitle: React.FC<IPageTitle> = ({ children }) => {\r\n  return <h1 className=\"px-2\">{children}</h1>\r\n}\r\n","import { useEffect, useState, FC } from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport { HomeNotes } from './components/HomeNotes'\r\nimport { PageTitle } from '../../components/PageTitle/PageTitle'\r\n\r\nconst Home: FC = () => {\r\n  return (\r\n    <Row>\r\n      <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n        <PageTitle>Home</PageTitle>\r\n      </Col>\r\n      <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n        <HomeNotes />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { PageTitle } from '../../components/PageTitle/PageTitle'\r\n\r\ninterface Props {}\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div>\r\n      <PageTitle>Acerca de</PageTitle>\r\n      <div className=\"px-2\">\r\n        <p>\r\n          Con NoteRoo puedes administrar tus notas de forma local, a medidas que\r\n          las creas, modificas o eliminas estos cambios quedarÃ¡n almacenados en\r\n          tu dispositivo. Adicionalmente puedes separar tus notas por\r\n          categorÃ­as, para poder ordenar y gestionar tus notas en diferentes\r\n          ambitos de tu vida y trabajo.\r\n          <br />\r\n          <br />\r\n          Esto corresponde a la primera etapa de lanzamiento de la aplicaciÃ³n y\r\n          se encuentra sujeta a posibles cambios futuros\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { Button, Tooltip } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, TagsOutlined } from '@ant-design/icons'\r\nimport './Navbar.scss'\r\n\r\nexport const Navbar = () => {\r\n  const size = 'large'\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"mainMenu\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <Button size={size} shape=\"circle\" icon={<HomeOutlined />} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">\r\n            <Button size={size} shape=\"circle\" icon={<TagsOutlined />} />\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n","import { INote } from './../../interfaces/note.interface'\r\nimport { INoteState } from './interfaces'\r\n\r\nconst initialState: INoteState = {\r\n  notes: [],\r\n  showCreateForm: false,\r\n  visibilityType: 'list',\r\n  noteForm: {\r\n    id: 0,\r\n    name: '',\r\n    description: '',\r\n    status: true,\r\n    tags: [],\r\n  },\r\n}\r\n\r\nexport default (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case 'SET_NOTES': {\r\n      const notes = action.payload\r\n      return { ...state, notes }\r\n    }\r\n\r\n    case 'SET_SHOW_CREATE_FORM': {\r\n      const showCreateForm = action.payload\r\n      return { ...state, showCreateForm }\r\n    }\r\n\r\n    case 'SET_VISIBILITY_TYPE': {\r\n      const visibilityType = action.payload\r\n      return { ...state, visibilityType }\r\n    }\r\n\r\n    case 'SET_NOTE_FORM': {\r\n      const noteForm = action.payload\r\n      return { ...state, noteForm }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { createStore, combineReducers } from 'redux'\r\nimport { INoteState } from './note/interfaces'\r\nimport note from './note/reducer'\r\n\r\nexport interface IStore {\r\n  note: INoteState\r\n}\r\n\r\nconst reducers = combineReducers({\r\n  note,\r\n})\r\n\r\nexport default createStore(\r\n  reducers,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n","import { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './views/home/Home'\nimport About from './views/about/About'\nimport { Navbar } from './components/Navbar/Navbar'\nimport 'antd/dist/antd.css' // or 'antd/dist/antd.less'\nimport './App.scss'\nimport { Provider } from 'react-redux'\nimport store from './store/index'\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"navbarContainer\">\n          <Navbar />\n\n          <div className=\"viewContainer\">\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}